// -*- C++ -*-
//
// DalitzDecayer.icc is a part of ThePEG - Toolkit for HEP Event Generation
// Copyright (C) 1999-2007 Leif Lonnblad
//
// ThePEG is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the inlined member functions of
// the DalitzDecayer class.
//

namespace ThePEG {

inline DalitzDecayer::DalitzDecayer() {}

inline DalitzDecayer::DalitzDecayer(const DalitzDecayer & x)
  : Decayer(x) {}

inline IBPtr DalitzDecayer::clone() const {
  return new_ptr(*this);
}

inline IBPtr DalitzDecayer::fullclone() const {
  return new_ptr(*this);
}

inline void DalitzDecayer::doupdate() throw(UpdateException) {
  Decayer::doupdate();
  // First update base class.
  bool redo = touched();
  // redo if touched.
//  UpdateChecker::check(aDependentMember, redo);
  // Update referenced objects on which this depends redo is set to true
  // if the dependent object is touched.
//  for_each(ContainerOfDependencies, UpdateChecker(redo));
  // Update a container of references.
//  for_each(MapOfDependencies, UpdateMapChecker(redo));
  // Update a map of references.
  if ( !redo ) return;
  // return if nothing has been touched. Otherwise do the actual update.
//  touch()
  // Touch if anything has changed.
}

inline void DalitzDecayer::dofinish() {
  Decayer::dofinish();
}

inline void DalitzDecayer::doinitrun() {
  Decayer::doinitrun();
}

}
