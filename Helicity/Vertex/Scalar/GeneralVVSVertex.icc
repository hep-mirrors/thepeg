// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the GeneralVVSVertex class.
//
namespace ThePEG {
namespace Helicity {

inline GeneralVVSVertex::GeneralVVSVertex() {
  setNpoint(3);
  setSpin(3,3,1);
  _a00 = 1.;_a11 = 0.;
  _a12 = 0.;_a21 = 0.;
  _a22 = 0.;_aEp = 0.;
  _representation = 1;
  setName(GeneralVVS);
}

//Access tensor Coefficients
inline Complex GeneralVVSVertex::a00() const {return _a00;}
inline Complex GeneralVVSVertex::a11() const {return _a11;}
inline Complex GeneralVVSVertex::a12() const {return _a12;}
inline Complex GeneralVVSVertex::a21() const {return _a21;}
inline Complex GeneralVVSVertex::a22() const {return _a22;}
inline Complex GeneralVVSVertex::aEp() const {return _aEp;}

//Set tensor coefficients
inline void GeneralVVSVertex::a00(const Complex & val) {_a00 = val;}
inline void GeneralVVSVertex::a11(const Complex & val) {_a11 = val;}
inline void GeneralVVSVertex::a12(const Complex & val) {_a12 = val;}
inline void GeneralVVSVertex::a21(const Complex & val) {_a21 = val;}
inline void GeneralVVSVertex::a22(const Complex & val) {_a22 = val;}
inline void GeneralVVSVertex::aEp(const Complex & val) {_aEp = val;}

inline void GeneralVVSVertex::setCoefScheme(unsigned int representation) {
  _representation = representation;
}
}
}
