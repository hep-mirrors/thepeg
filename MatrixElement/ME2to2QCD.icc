// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the ME2to2QCD class.
//

namespace ThePEG {

inline ME2to2QCD::ME2to2QCD()
  : theMaxFlavour(5), theKfac(1.0), theKfacA(1.0), useInterference(true) {}

inline ME2to2QCD::ME2to2QCD(const ME2to2QCD & x)
  : ME2to2Base(x), theMaxFlavour(x.theMaxFlavour),
    theKfac(x.theKfac), theKfacA(x.theKfacA),
    useInterference(x.useInterference) {}

inline int ME2to2QCD::maxFlavour() const {
  return theMaxFlavour;
}

inline double ME2to2QCD::Kfac() const {
  return theKfac;
}

inline double ME2to2QCD::KfacA() const {
  return theKfacA >= 0.0? theKfacA: theKfac;
}

inline bool ME2to2QCD::interference() const {
  return useInterference;
}

inline bool ME2to2QCD::isQuark(const ParticleData & p) const {
  return ( p.id() && abs(p.id()) <= maxFlavour() );
}

inline void ME2to2QCD::doupdate() throw(UpdateException) {
  ME2to2Base::doupdate();
}

inline void ME2to2QCD::doinit() throw(InitException) {
  ME2to2Base::doinit();
}

inline void ME2to2QCD::dofinish() {
  ME2to2Base::dofinish();
}

inline void ME2to2QCD::rebind(const TranslationMap & trans)
  throw(RebindException) {
  ME2to2Base::rebind(trans);
}

inline IVector ME2to2QCD::getReferences() {
  return ME2to2Base::getReferences();
}

}
