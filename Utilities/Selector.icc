// -*- C++ -*-
//
// Selector.icc is a part of ThePEG - Toolkit for HEP Event Generation
// Copyright (C) 1999-2007 Leif Lonnblad
//
// ThePEG is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
namespace ThePEG {

template <typename T, typename WeightType>
inline WeightType Selector<T,WeightType>::insert(WeightType d, const T & t) {
  typedef typename MapType::value_type value_type;
  WeightType newSum = theSum + d;
  if ( newSum <= theSum ) return d;
  theMap.insert(theMap.end(), value_type((theSum = newSum), t));
  return theSum;
}

template <typename T, typename WeightType>
void Selector<T,WeightType>::replace(const T & oldObject, const T & newObject) {
  for ( iterator it = theMap.begin(); it != theMap.end(); ++it )
    if ( it->second == oldObject ) it->second = newObject;
}

template <typename T, typename WeightType>
template <typename RNDGEN>
inline T & Selector<T,WeightType>::select(RNDGEN & rnd) throw(range_error) {
  double rem = 0.0;
  T & t = select(rnd(), &rem);
  rnd.push_back(rem);
  return t;
}

template <typename T, typename WeightType>
template <typename RNDGEN>
inline const T & Selector<T,WeightType>::select(RNDGEN & rnd)
  const throw(range_error) {
  double rem = 0.0;
  const T & t = select(rnd(), &rem);
  rnd.push_back(rem);
  return t;
}

}
