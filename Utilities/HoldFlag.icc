// -*- C++ -*-
//
// HoldFlag.icc is a part of ThePEG - Toolkit for HEP Event Generation
// Copyright (C) 1999-2007 Leif Lonnblad
//
// ThePEG is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the inlined member functions of
// the HoldFlag class.
//

namespace ThePEG {

template <typename T>
inline HoldFlag<T>::HoldFlag(T & newFlag, const T & holdFlag)
  : theFlag(newFlag), oldFlag(holdFlag) {
  std::swap(theFlag, oldFlag);
}

template <typename T>
inline HoldFlag<T>::
HoldFlag(T & newFlag, const T & holdFlag, const T & finalFlag)
  : theFlag(newFlag), oldFlag(holdFlag) {
  std::swap(theFlag, oldFlag);
  oldFlag = finalFlag;
}

template <typename T>
inline HoldFlag<T>::~HoldFlag() {
  std::swap(theFlag, oldFlag);
}

inline HoldFlag<bool>::HoldFlag(bool & newFlag, bool holdFlag)
  : theFlag(newFlag), oldFlag(newFlag) {
  theFlag = holdFlag;
}

inline HoldFlag<bool>::HoldFlag(bool & newFlag, bool holdFlag, bool finalFlag)
  : theFlag(newFlag), oldFlag(finalFlag) {
  theFlag = holdFlag;
}

inline HoldFlag<bool>::~HoldFlag() {
  theFlag = oldFlag;
}

}
