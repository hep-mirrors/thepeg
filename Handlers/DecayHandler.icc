// -*- C++ -*-
//
// DecayHandler.icc is a part of ThePEG - Toolkit for HEP Event Generation
// Copyright (C) 1999-2007 Leif Lonnblad
//
// ThePEG is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the inlined member functions of
// the DecayHandler class.
//

namespace ThePEG {

inline DecayHandler::DecayHandler()
  : theMaxLoop(100000) {}

inline DecayHandler::DecayHandler(const DecayHandler & dh)
: StepHandler(dh), theMaxLoop(dh.theMaxLoop) {}

inline long DecayHandler::maxLoop() const {
  return theMaxLoop;
}

inline IBPtr DecayHandler::clone() const {
  return new_ptr(*this);
}

inline IBPtr DecayHandler::fullclone() const {
  return new_ptr(*this);
}

inline void DecayHandler::doupdate() throw(UpdateException) {
  StepHandler::doupdate();
}

inline void DecayHandler::doinit() throw(InitException) {
  StepHandler::doinit();
}

inline void DecayHandler::dofinish() {
  StepHandler::dofinish();
}

inline void DecayHandler::rebind(const TranslationMap & trans)
   throw(RebindException) {
  // dummy = trans.translate(dummy);
  StepHandler::rebind(trans);
}

inline IVector DecayHandler::getReferences() {
  IVector ret = StepHandler::getReferences();
  // ret.push_back(dummy);
  return ret;
}

}
