// -*- C++ -*-
//
// XComb.icc is a part of ThePEG - Toolkit for HEP Event Generation
// Copyright (C) 1999-2007 Leif Lonnblad
//
// ThePEG is licenced under version 2 of the GPL, see COPYING for details.
// Please respect the MCnet academic guidelines, see GUIDELINES for details.
//
//
// This is the implementation of the inlined member functions of
// the XComb class.
//

namespace ThePEG {

inline const EventHandler & XComb::eventHandler() const {
  return *theEventHandler;
}

inline const cPDPair & XComb::particles() const {
  return theParticles;
}

inline const cPDPair & XComb::partons() const {
  return thePartons;
}

inline tSubProPtr XComb::subProcess() const {
  return theSub;
}

inline const PBPair & XComb::partonBins() const {
  return thePartonBins;
}
  
inline const PBIPair & XComb::partonBinInstances() const {
  return thePartonBinInstances;
}

inline tPExtrPtr XComb::pExtractor() const {
  return thePartonExtractor;
}

inline tCascHdlPtr XComb::CKKWHandler() const {
  return theCKKW;
}

inline tCutsPtr XComb::cuts() const {
  return theCuts;
}

inline const PPair & XComb::lastParticles() const {
  return theLastParticles;
}

inline const PPair & XComb::lastPartons() const {
  return theLastPartons;
}

inline Energy2 XComb::lastS() const {
  return theLastS;
}

inline Energy2 XComb::lastSHat() const {
  return theLastSHat;
}

inline double XComb::lastTau() const {
  return lastSHat()/lastS();
}

inline double XComb::lastY() const {
  return theLastY;
}

inline double XComb::lastP1() const {
  return theLastP1P2.first;
}

inline double XComb::lastP2() const {
  return theLastP1P2.second;
}

inline double XComb::lastL1() const {
  return theLastL1L2.first;
}

inline double XComb::lastL2() const {
  return theLastL1L2.second;
}

inline double XComb::lastX1() const {
  return theLastX1X2.first;
}

inline double XComb::lastX2() const {
  return theLastX1X2.second;
}

inline double XComb::lastE1() const {
  return theLastE1E2.first;
}

inline double XComb::lastE2() const {
  return theLastE1E2.second;
}

inline Energy2 XComb::lastScale() const {
  return theLastScale;
}

inline void XComb::lastScale(Energy2 Q2) {
  theLastScale = Q2;
}

inline double XComb::lastAlphaS() const {
  return theLastAlphaS;
}

inline void XComb::lastAlphaS(double a) {
  theLastAlphaS = a;
}

inline double XComb::lastAlphaEM() const {
  return theLastAlphaEM;
}

inline void XComb::lastAlphaEM(double a) {
  theLastAlphaEM = a;
}

inline bool XComb::empty() const {
  return !theEventHandler;
}

inline Energy XComb::maxEnergy() const {
  return theMaxEnergy;
}

inline void XComb::lastS(Energy2 s) {
  theLastS = s;
}

inline void XComb::lastSHat(Energy2 sh) {
  theLastSHat = sh;
}

inline void XComb::lastP1P2(pair<double,double> pp) {
  theLastP1P2 = pp;
}

inline void XComb::lastL1L2(pair<double,double> ll) {
  theLastL1L2 = ll;
  theLastX1X2 = make_pair(exp(-ll.first), exp(-ll.second));
  theLastE1E2 = make_pair(Math::exp1m(-ll.first), Math::exp1m(-ll.second));
}

inline void XComb::lastX1X2(pair<double,double> xx) {
  theLastX1X2 = xx;
  theLastL1L2 = make_pair(-log(xx.first), -log(xx.second));
  theLastE1E2 = make_pair(1.0 - xx.first, 1.0 - xx.second);
}

inline void XComb::lastE1E2(pair<double,double> ee) {
  theLastE1E2= ee;
  theLastL1L2 = make_pair(-Math::log1m(ee.first), -Math::log1m(ee.second));
  theLastX1X2 = make_pair(1.0 - ee.first, 1.0 - ee.second);
}

inline void XComb::lastPartons(PPair pp) {
  theLastPartons = pp;
}

inline void XComb::lastY(double y) {
  theLastY = y;
}

}
