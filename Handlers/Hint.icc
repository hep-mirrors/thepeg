// -*- C++ -*-
//
// This is the implementation of the inlined member functions of
// the Hint class.
//

namespace ThePEG {

inline Hint::Hint()
  : theScale(0.0), theStopFlag(false) {}

inline Hint::Hint(const Hint & h)
  : Base(h), theTagged(h.theTagged), theScale(h.theScale),
    theStopFlag(h.theStopFlag) {}

inline Hint::~Hint() {}

inline const Hint & Hint::operator=(const Hint & h) {
  theTagged = h.theTagged;
  theScale = h.theScale;
  theStopFlag = h.theStopFlag;
  return *this;
}

inline bool Hint::stop() const {
  return theStopFlag;
}

inline void Hint::stop(bool newStopFlag) {
  theStopFlag = newStopFlag;
  if ( theStopFlag ) theTagged.clear();
}

inline bool Hint::tagged() const {
  return theTagged.size() > 0;
}

inline const Scale & Hint::scale() const {
  return theScale;
}

inline void Hint::scale(const Scale & newScale) {
  theScale = newScale;
}

template <typename InputIterator>
inline void Hint::tag(InputIterator first, InputIterator last) {
  theTagged.insert(theTagged.end(), first, last);
}

inline void Hint::tag(tPPtr p) {
  if ( p ) theTagged.push_back(p);
}

inline tHintPtr Hint::Default() {
  return tHintPtr(&theDefaultHint);
}

}
