2004-03-01  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Config/Complex.h (Module): Added using std::complex int the
	ThePEG namespace.

2004-02-24  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* EventRecord/Particle.*: Added function 'abandonChild' which will
	undo the actions of 'addChild', i.e. Remove the child from the
	list of children and also remove this from the childs list of
	parents.

2003-11-19  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* lib/ThePEG.el: Made sure ClassTraits.h is included before class
	traits templates are specialized.

	* configure.in, Config/Makefile.common.in: Made configure steer
	all compiler flags and included info for --help option. Also
	changed the check for log1p and expm1 which caused problems under
	cygwin. Need to also fix a atanh check but no solution to that for
	cygwin yet.

2003-11-04  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* lib/Makefile, lib/fixCLHEP: If CLHEP is already in a dynamic
	library, make symbolic links to the corresponding files instead of
	copying. Also make symbolic links when installing.

2003-11-02  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Makefile: Fixed dependencies for setup target.

	* configure.in: Fixed strange behavior when --prefix is not
	explicitly used.

2003-10-31  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* lib/fixCLHEP: Since CLHEP-2.0 comes with shared libraries, we
	now look for that before trying to find the static one.

	* Handlers/ACDCSampler.h: Added using namespace ThePEG::Units in
	the ACDCGenerator namespace to be compatible with CLHEP-2.0 and
	earlier versions.

	* Config/Units.h: Added using namespace CLHEP to be
	compatible with CLHEP-2.0 and earlier versions.

	* CLHEPWrap/CLHEP.h: Added an empty CLHEP namespace to be
	compatible with CLHEP-2.0 and earlier versions.

	* ../Makefile: Made distclean a special target since here the
	ThePEG directory has to be cleaned last.

	* configure.in: Set the default CLHEPPATH to $prefix rather than
	hardcoded to /usr/local

2003-10-24  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* StandardModel/StandardModelBase.*: Changed CKM function to check
	if theCKM2Matrix has been generated by the CKM object before
	returning a matrix element.

2003-08-27  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* src/runThePEG.cc: If -x argument specifies a dynamic library, it
	is assumed to contain a class inheriting from Main and which has a
	static Init() function which runs the event generator instead of
	simply calling the event generators go() function.

2003-08-26  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Repository/Main.*: Added base class for classes implementing a
	main steering routine for running an EventGenerator, in case the
	standard 'go()' function in the EventGenerator is not enough.

	* Handlers/EventHandler.cc: Avoid floating exception in
	atatistics() if no events were generated. Write nice message
	instead.

	* Handlers/ACDCSampler.cc: Avoid floating exception in finish() if
	no events were generated. Write nice message instead.

	* ACDC/ACDCGen.icc: Avoid floating exception in efficiency() if no
	events were generated.

2003-08-13  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Handlers/DecayHandler.cc: Use the StepHandler::newStep()
	function.

	* Handlers/ClusterCollapser.h: Changed the signature of the
	collapse() function to take a new step as argument instead of a
	collision handler. Changed the handle method accordingly.

	* EventRecord/Collision.*, Handlers/PartialCollisionHandler.*:
	newStep() now have an optional argument to specify the step
	handler.

	* Handlers/StepHandler.cc: createNewStep now sets the handler to
	this.

2003-08-12  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* PDT/V2PPDecayer.cc: Fixed but in reweight() where the parent and
	grand parent momenta were not boosted to the parent cms.

	* PDT/WeakToHadronsDecayer.cc, PDT/V2PPDecayer.cc,
	PDT/OmegaPhi3PiDecayer.cc, PDT/FlatDecayer.*,
	PDT/DalitzDecayer.cc, PDT/Decayer.*: Added utility function
	getChildren(), finalBoost() and setScales() in Decayer to be used
	in subclasses.

	* Utilities/SimplePhaseSpace.tcc: Fixed bug in CMSn. I the case of
	two particles the angles were not properly distributed.

	* src/ThePEGParticles.in, src/ThePEGDefaults.in: Using
	WeakToHadronsDecayer instead of dummies PYDECY42 and
	PYDECY48. Also using DummyDecayer instead of PYDECY51 and PYDECY53

	* PDT/WeakToHadronsDecayer.*: Added class for weak decays of taus,
	charmed and bottom hadrons. Seems to work.

	* PDT/QuarksToHadronsDecayer.cc: Fixed bug where the decay
	products were not boosted to the parents frame. Also made minor
	change tosimplify for the WeakToHadronsDecayer sub class.

	* Makefile: Removed -$(MAKEFLAGS) in recursive calls.

2003-08-08  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Config/Makefile.common.in: Moved macro for THEPEGLIBS from src/Makefile to Config/Makefile.common

	* src/ThePEGParticles.in, src/ThePEGDefaults.in: Using
	QuarksToHadronsDecayer also instead of dummies PYDECY11 and
	PYDECY12. Also using ColourPairDecayer instead of dummy PYDECY32.

2003-08-07  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* PDT/ColourPairDecayer.*: Added class inheriting from FlatDecayer
	which can handle colour connected pairs of decay products which
	are to undergo subsequent hadronization and optional
	showereing. NOT TESTED.

	* PDT/QuarksToHadronsDecayer.cc: Class now can handle matcher
	specifications of light quark pairs.

	* PDT/FlatDecayer.*: Added virtual getChildren() functions for
	sub-classes which need to do special things with the children.

2003-08-04  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* src/ThePEGParticles.in, src/ThePEGDefaults.in: Using
	QuarksToHadronsDecayer instead of dummy PYDECY13.

	* PDT/QuarksToHadronsDecayer.cc: Fixed vaious bugs. Seems to work
	now, but physics not tested.

	* Handlers/SimpleFlavour.cc: Fixed bug in generateHadron() when
	argument was anti-quark and and in setProbabilities() for diquark
	production. Fixed anti-particle bug in vectorMeson() and
	pseudoScalarMeson(). THe class seems to work now but physics not
	tested.

	* Handlers/FlavourGenerator.cc: Just changed error messages.

2003-08-01  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Handlers/FlavourGenerator.*: Added 'always' wrapper functions
	which call the virtual generateHadron(), getHadron() and
	getBaryon() functions which throws exceptions if no hadron could
	be generated.

2003-07-30  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* PDT/QuarksToHadronsDecayer.*: Added class for decay of particles
	to quarks which are then converted to hadrons distributed
	according to phase space. Not ready yet.

	* PDT/StandardMatchers.h: Added QuarkMatcher.

	* src/ThePEGParticles.in, src/ThePEGDefaults.in,
	PDT/Onium3GDecayer.*: Added Onium3GDecayer class for decay of
	spin-1 onia into three gluons or two gluons and a photon. The
	class has not been properly tested.

2003-07-29  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* src/ThePEGDefaults.in: Added a SimpleFlavour object which is
	used by the BaryonRemnants and ClusterCollapser objects.

	* PDT/StandardMatchers.h: Added Check functions taking PDG code
	arguments for the MesonMatcher and BaryonMatcher classes.

	* PDT/PDT.*: Added functions to get the flavour content out of
	hadrons.

	* Handlers/SimpleFlavour.*: Added class to implement simple
	versions of the pure virtual functions of the FlavourGenerator
	class. The model implemented ti s simplified version of the Pythia
	fortran version. (NOT TESTED)

	* Handlers/FlavourGenerator.*: Changed the standard pure virtual
	functions for the FlavourGenerator class to get rid of things that
	were too much related to the Lund string fragmentation stuff.

2003-07-27  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* PDT/OmegaPhi3PiDecayer.h: Changed the class name in the class
	description to ThePEG::OmegaPhi3PiDecayer.

	* lib/ThePEG.el: Changed the naming of classes from
	"/{namespace}/{class}" to "{namespace}::{class}".

	* src/ThePEGParticles.in, src/ThePEGDefaults.in: Changed the
	naming of classes from "/{namespace}/{class}" to
	"{namespace}::{class}".

	* Utilities/DescriptionList.cc: The naming of classes in the class
	description has until now been on the form "/{namespace}/{class}"
	In the future it should instead be on the more natural form
	"{namespace}::{class}". Before the new naming scheme is enforced
	class descriptions will be registered in both the old and new
	form.

	* Repository/BaseRepository.*: Added remove(ObjectList) to safely
	remove a set of objects from the repository if no other objects
	are referring to them. The function is used by the "rm"
	command. In addition a new command "rrmdir" was added to remove a
	complete directory with all its objects and sub-directories. (The
	"rmdir" only removes empty directories.)

	* Repository/Repository.*: The "cp" command now treats particles
	separately (copyParticle()). If a particle has an anti-partner
	this is also copied to the same directory. In addition the decay
	modes of both particle and anti-particle will be copied.

	* PDT/DecayMode.cc: in constructDecayMode() it is now the default
	to specify the full name of the decaying particle (rather than
	just the PDGName).

2003-07-26  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* CLHEPWrap/*.fh, CLHEPWrap/*.h: Reordered include paths to
	prepare for next version of CLHEP which will use namespace CLHEP.

2003-07-25  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* PDT/DecayMode.*: Added new member variable to remember the order
	in which the decay products were specified. The produceProducts()
	now created particles according to this order.

	* src/ThePEGParticles.*, src/ThePEGDefaults.in,
	PDT/DummyDecayer.*: Added DummyDecayer class for symbolic decay
	channels. It replaces the PYDECYDummy decayer with mode 102.

	* src/ThePEGParticles.*, src/ThePEGDefaults.in,
	PDT/Tau2HadronsDecayer.*: Added class to decay tau to neutrino
	plus hadrons.

	* PDT/OmegaPhi3PiDecayer.cc: 

	* src/ThePEGParticles.in, src/ThePEGDefaults.in,
	PDT/DalitzDecayer.*: Added class to perform Dalitz decays into e+
	e- gamma.

2003-07-24  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* PDT/StandardMatchers.h: Added matcher classes for
	PseudoScalarMesons and VectorMesons.

	* src/ThePEGParticles.*, src/ThePEGDefaults.in, PDT/V2PPDecayer.*:
	Added V2PPDecayer class to decay vector mesons to pseudo-scalar
	ones. Will be flat in phase space unless the grand parent is a
	speudoscalar and its only other daughter is a speudo-scalar or a
	photon.

	* Repository/EventGenerator.icc: Added member functions and
	variables to access the current (partial) collision handler and
	the current step handler.

	* Handlers/PartialCollisionHandler.*: addStep() now has default
	null arguments for the step handler and the hint. If the hint is
	null, it is immediately converted to the default hint. If a step
	was added to a given group, the subsequent groups are
	automatically reinitialized.  In continueCollision(), the
	currentCollisionHandler() of the current event generator is set to
	this. In performStep() the currentStepHandler() in the current
	event generator is set to the step handler which is called.

	* Handlers/HandlerGroup.cc: next() will now return immediately for
	an empty group. addPreHandler(), addHint() and addPostHandler()
	now assumes (rightly) that the hint recieved is never null.
	addHint will refill the whole group event if there is the main
	handler is currently executing. I.e it is assumed that someone
	adding a hint to the main handler wants the whole group to be
	redone.

	* EventRecord/Collision.cc: Fixed so that if a perticle is removed
	from the event record its birthStep pointer is set to null.
	Hopefully this will fix the problem that sometimes when a
	generator is dumped (due to an error) a particle is written to a
	persistent stream and then tries to write a no longer existent
	birthStep.

2003-07-23  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* PDT/OmegaPhi3PiDecayer.*, src/ThePEGDefaults.in,
	src/ThePEGParticles.in: Added OmegaPhi3PiDecayer class to handle
	omega-phi->3pi decays.

	* lib/ThePEG.el: Added ThePEG-Decayer-class-files function.

	* PDT/FlatDecayer.cc: Now uses DecayMode::produceProducts().

	* src/ThePEGParticles.in, PDT/DecayMode.*: The naming of decay
	modes were before such that only the number and types of the decay
	products were important, this meant that it was not possible to
	have both eg. B0 -> c-cbar d-sbar and B0 -> c-sbar d-cbar decay
	modes since they have the same name and same representation.  Now
	the concept of links have been introduced to indicate that decay
	products can be linked together in pairs making two decay modes
	with the same decay products but different linking different. This
	is indicated in the name by an equal sign instead of a comma:
	B0->c=cbar,sbar=d; and B0->c=sbar,cbar=d;

	Also added a produceProducts() function to produce particles from
	the specified decay products, so that linked particles come first
	and consecutively in the returned vector.

2003-07-22  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* CLHEPWrap/Makefile: Added Matrix.h and Matrix.fh to the dist
	files.

	* lib/fixCLHEP: Make sure the fixed .so version of the CLHEP
	library is called libCLHEP.so irrespective of what the original
	CLHEP library was called.

	* MatrixElement/MEQQ2GG.cc, MatrixElement/MEQG2QG.cc: Fixed error
	in specification of intermediate particles (which was compensated
	by a corresponding error in the colour flow).

	* Makefile: Changed the version number to 1.0ab (between alpha and
	beta).

2003-07-21  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* lib/ThePEG.el: Added the parameter and switches functions which
	were forgotten in the move from skeleton.el

2003-07-20  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* EventRecord/Step.*: Added addDecayNoCheck(tPPtr parent, tPPtr
	child) and, addDecayProduct(tPPtr child) to add decay products
	which are already linked with their parents.

2003-07-19  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* PDF/RemnantHandler.*, PDF/PartonExtractor.*, PDF/PartonBin.*,
	PDF/PDF.*, PDF/NoRemnants.*, PDF/LeptonLeptonRemnant.*,
	PDF/BaryonRemnants.*, Handlers/XComb.*,
	Handlers/LastXCombInfo.icc, Handlers/CollisionHandler.cc: Removed
	all traces of old strategy involving the PartonBinInfo and
	RemnantInfo classes.

2003-07-16  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Utilities/DynamicLoader.cc: Added the current working directory
	as a standard search path. Also added '/' between paths and
	libraries if needed.

	* src/Makefile: Corrected link flags for setup and run programs.

	* Templates/Makefile, lib/Makefile: Moved ThePEG.el and g++dep to
	the lib directory.

	* Repository/EventGenerator.cc: Changed Pythia7 to ThePEG in
	generateReferences().

	* Handlers/StepHandler.cc: The createNewStep() function now
	automatically calles useMe()

	* Handlers/SubProcessHandler.*, Handlers/KinematicalCuts.*,
	Handlers/EventHandler.*, Handlers/CollisionHandler.*,
	Handlers/AnalysisHandler.*: Added fullclone() method to avoid
	slicing when making copies in the Repository.

	* Config/Makefile, Config/Makefile.common.in: Fixed correct
	include path for installed makefiles.

	* Makefile:  install now depends on the check target to ensure the
	setup and run programs are compiled.

	* ../configure: Added top-level configure script which simply runs
	configure in the sub-directories.

2003-07-14  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Config/Makefile: Removed config.h from DISTFILES.

	* Utilities/SimplePhaseSpace.cc: CMSn now throws
	ImpossibleKinematics if an infinite boost is requested.

	* Utilities/UtilityBase.*: Added new setMomentum function which
	doesn't boost to cms but just rotates to z-axis boosts along it
	and rotates to correct angle.

	* PDT/FlatDecayer.cc: Fixed precision problems for large boosts of
	decay products.

2003-07-13  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Config/Makefile.install: This file is copied to the lib dir in
	the installation and can be used to compile a users own .so
	modules.

	* lib/Makefile: The .o files included in libThePEG.so are now
	explicitly listed. The .so files in the listed sub-directories are
	explicitly soft-linked to the lib directory.

	* Config/Makefile.common.in: .o and .so files are no longer
	automatically soft-linked to the lib directory.

2003-07-12  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Templates/ThePEG.el: This elisp file will replace the old
	skeleton.el. The main difference is the renaming of the p7-*
	functions to thepeg-*. Also started to write specialized functions
	to create standard handler classes with templates for the virtual
	functions.

	* EventRecord/Step.cc: In addDecayProduct() remove test to see if
	children are still in the final state.

2003-07-08  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Utilities/SimplePhaseSpace.cc: Set the momentum of the first
	particle rather than boosting it to avoid problems with massless
	particles.

	* Makefile: Hid unnecessary output with @.

	* Utilities/UtilityBase.tcc: Fixed imediate returns in case ranges
	of particles is empty. In setMomentum the boost version is only
	tried if the invariant mass squared or the mass is non-negative,
	otherwise the momentum is set directly.

	* Utilities/Exception.cc: Added a debug function to print out a
	range of particles (and summing their momenta).

	* PDT/ParticleData.h: Added produceParticle method which takes a
	Lorentz vector and a mass.

	* PDF/LeptonLeptonRemnant.*: Added parameter to veto photon
	remnants with too small energy fractions. Also the photons mass is
	properly set to zero.

	* Handlers/ClusterCollapser.cc: The procedure to find particles to
	compensate with was changed so that coloured particles are tried
	first and singlets only if the coloured particles were not enough.
	Also required the compensating particles to have a positive
	invariant mass squared to avoid boost problems.

	* EventRecord/ColourSinglet.*: Introduced ColourSingletException
	which is thrown if an inconsistent colour flow is detected.

2003-07-07  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Utilities/Exception.cc: Added debug function to print out
	particle.

	* Handlers/ClusterCollapser.cc: Fixed bug for the case where mass
	of compensating particle is 0.

2003-07-05  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Utilities/UtilityBase.tcc: Fixed bug in transformToCMS(): boos
	was backward.

	* Utilities/UtilityBase.*: Added transformToMomentum() method.

	* Utilities/SimplePhaseSpace.cc: Fixed potential problem in
	getMagnitude() where impossible kinematics didn't generate an
	exception due to rounding errors.

	* EventRecord/Step.*: Added setCopy method.

	* CLHEPWrap/Transverse.icc: Fixed bug in phi() calculation.

2003-07-04  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* PDF/PartonExtractor.cc: Messed around with the newRemnants
	methods.

	* Utilities/ObjectIndexer.icc: Fixed memory leak in
	operator()(Int).

2003-07-03  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Handlers/StepHandler.h: Added method and member for getting the
	current step from the collision handler.

	* PDF/PartonExtractor.*: Changed return type on newRemnants method.

	* Utilities/ObjectIndexer.*: Added const method for getting object
	from index without possibility to create corresponding object.

	* EventRecord/Step.*: Added insertCopy method.

2003-07-02  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* PDF/PartonBin.*: Added information about outgoing bins in
	addition to the info about the incoming bin.

	* PDF/PartonExtractor.*, Handlers/XComb.*,
	Handlers/CollisionHandler.*: Changed to use PartonBinInstance
	instead of PartonBinInfo.

	* EventRecord/Step.*: Added removeDecayProducts methods.

2003-07-01  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Handlers/XComb.cc: Fixed floating underflow problem due to
	uninitialized field in constructor.

2003-06-30  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Handlers/XComb.*: Prepared to use the new PartonBinInstance
	class.

	* PDF/PartonExtractor.*: Prepared to use the new PartonBinInstance
	class.

	* PDF/RemnantHandler.*, PDF/NoRemnants.*,
	PDF/LeptonLeptonRemnant.*, PDF/BaryonRemnants.*: Prepared to use
	the new PartonBinInstance class.

	* PDF/PartonBinInstance.*: Added new class to hold info on parton
	bins. Instead of a PartonBin having a ParonBinInfo to keep
	temporary info, PartonBinInstance keeps a PartonBin together with
	temporary info.

	* CLHEPWrap/Transverse.h: Added units for input/output to streams.

2003-06-28  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* PDF/PartonExtractor.cc: Fixed association beteen partons and
	parton bins for generated sub-processes (used to find PDFs for
	partons).

2003-06-23  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Utilities/ObjectIndexer.*: Added templated class for dynamical
	association between (reference counted) objects and indices.

	* Handlers/StepHandler.*, Handlers/PartialCollisionHandler.cc: In
	preparation for changing the signature of the handle() method i
	StepHandler classes, StepHandler now has a method to return the
	collision handler which made the call to handle(), The
	corresponding member variable is set be the
	PartialCollisionHandler before handle() is called. Also the
	StepHandler class now has its own method to create a new step if
	needed.

	* PDT/FlatDecayer.cc: The scale of all decay products in a decay
	is set to the squared mass of the decaying particle.

	* Handlers/XComb.cc: The scale of all incoming and outgoing
	partons in a sub-process is set to the hard scale.

	* Handlers/DecayHandler.cc: The scale of a particle which has
	decayed is set to zero.

2003-06-16  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* Repository/Repository.cc: Added code so that the load() command
	will look in the ThePEG_INSTALL_PATH for a .rpo file if the given
	filename did not exist.

2003-06-14  Leif Lönnblad  <Leif.Lonnblad@thep.lu.se>

	* First check-in of ThePEG. This is just what was previously
	Pythia7 but stripped from any pythia-specific classes.  Pythia7
	still exists but contains only pythia-specific classes which
	depend on ThePEG.

	Most significant change is that the 'Misc' directory has been
	removed and all classes therin has been moved to the 'Utilities'
	directory. 

	Another change is that 'make check' now only checks the SimpleLEP
	generator since the SimpleLHC generator was indirectly dependent
	on the FlavourGenerator in the pythia string fragmentation classes
	(used in the remnant handling).

	When compiling, the full compiler and link commands are now by
	default replaced by messages such as 'comiling xxx.cc ...' To see
	the full commands use the make-variable SHOWCOMMAND eg. 'make -k
	check SHOWCOMMAND=1'
