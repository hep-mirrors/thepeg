// -*- C++ -*-
#ifndef ThePEG_PDFCuts_H
#define ThePEG_PDFCuts_H
// This is the declaration of the PDFCuts class.

#include "ThePEG/Config/ThePEG.h"
#include "ThePEG/Utilities/Interval.h"
// #include "PDFCuts.fh"
// #include "PDFCuts.xh"

namespace ThePEG {

/**
 * The PDFCuts class is used to specify cuts on scale and momentum
 * fractions for which a PDFBase object is expected to give parton
 * densities. It is used to estimate upper limits on the parton
 * densities to be generated by a PDFBase object.
 *
 * @see PDFBase
 */
class PDFCuts {

public:

  /** @name Standard constructors, assignment and destructors. */
  //@{
  /**
   * Default constructor.
   */
  inline PDFCuts();

  /**
   * Copy-constructor.
   */
  inline PDFCuts(const PDFCuts &);

  /**
   * Destructor.
   */
  inline ~PDFCuts();

  /**
   * Construction from members.
   */
  inline PDFCuts(const Interval<double> & newL,
		 const SInterval & newScale, const Energy2 & newSMax);

  /**
   * Construction from a KinematicalCuts object, using the values for
   * the first incoming parton (or not).
   */
  PDFCuts(const KinematicalCuts &, bool first, const SInterval & S,
	  const SInterval & sHat);

  /**
   * Construction from a KinematicalCuts object, using the values for
   * the first incoming parton (or not).
   */
  PDFCuts(const KinematicalCuts &, bool first, Energy maxEnergy);

  /**
   * Assignment operator.
   */
  inline PDFCuts & operator=(const PDFCuts &);
  //@}

public:

  /** @name Access the individual limits. */
  //@{
  /**
   * The minimum value of \f$\log(1/x)\f$.
   */
  inline double lMin() const;

  /**
   * The maximum value of \f$\log(1/x)\f$.
   */
  inline double lMax() const;
  /**
   * The minimum value of x.
   */
  inline double xMin() const;

  /**
   * The maximum value of x.
   */
  inline double xMax() const;

  /**
   * The lower limit on the scale to be used.
   */
  inline Energy2 scaleMin() const;

  /**
   * The upper limit on the scale to be used.
   */
  inline Energy2 scaleMax() const;

  /**
   * The maximum scale for a given momentum fraction.
   */
  inline Energy2 scaleMax(double x) const;

  /**
   * The maximum scale for a given logarithmic momentum fraction.
   */
  inline Energy2 scaleMaxL(double l) const;

  /**
   * The maximum invariant mass squared of the colliding particles.
   */
  inline Energy2 sMax() const;
  //@}

private:

  /**
   * The minimum and maximum values of \f$\log(1/x)\f$.
   */
  Interval<double> theL;

  /**
   * The limits on the scale to be used.
   */
  SInterval theScale;

  /**
   * The maximum invariant mass squared of the colliding particles.
   */
  Energy2 theSMax;

};

}

#include "PDFCuts.icc"
#ifndef ThePEG_TEMPLATES_IN_CC_FILE
// #include "PDFCuts.tcc"
#endif

#endif /* ThePEG_PDFCuts_H */
